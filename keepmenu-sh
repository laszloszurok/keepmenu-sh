#!/usr/bin/env bash

config_file="${XDG_CONFIG_HOME:-$HOME/.config}/keepmenu-sh/config"

# cache files
cache_dir="${XDG_CACHE_HOME:-$HOME/.cache}/keepmenu-sh"
recent_cache="$cache_dir/recent"
all_cache="$cache_dir/all"
mkdir -p "$cache_dir"

update_cache() {
    sed -i "\|$1|d" "$recent_cache"
    echo -e "$1\n$(< "$recent_cache")" > "$recent_cache"
}

sed_escape() {
    sed -e 's/[]\/$*.^[]/\\&/g'
}

cfg_read() { # path, key -> value
    test -f "$1" && grep "^$(echo "$2" | sed_escape)=" "$1" | sed "s/^$(echo "$2" | sed_escape)=//" | tail -1
}

cfg_write() { # path, key, value
    echo "$2=$3" >> "$1"
}

if [ ! -f $config_file ]; then
    printf "No configuration file found\nCreating template in %s\nPlease edit the file and provide the appropriate values\n" "$config_file"
    mkdir -p "${XDG_CONFIG_HOME:-$HOME/.config}/keepmenu-sh"
    cfg_write "$config_file" db_path
    cfg_write "$config_file" key_path
    cfg_write "$config_file" dmenu_flags
    exit 1
fi

db_path=$(cfg_read $config_file db_path)
key_path=$(cfg_read $config_file key_path)
dmenu_flags=$(cfg_read $config_file dmenu_flags)

[ -z "$db_path" ] && echo "Missing configuration option 'db_path'" && exit 1
[ -z "$key_path" ] && echo "Missing configuration option 'key_path'" && exit 1

# dmenu prompt
prompt="copy password:"

# get all entries from the db
not_found=0
db_entries=$(keepassxc-cli ls -R -f "$db_path" -k "$key_path" --no-password | grep '/$\|^Recycle Bin' -v) || not_found=1
if [ "$not_found" -eq 1 ]; then
    notify-send "Can't open database" "Database or key not found"
    printf "Provide the absolute path for the database and the key in the config file\n"
    exit 1
fi

# write to recent_cache if it does not exist
[ ! -f "$recent_cache" ] && printf "%s\n" "$db_entries"  > "$recent_cache"

# always write the full list to all_cache, so the list will be always up to date
printf "%s\n" "$db_entries" > "$all_cache"

# remove anything from recent_cache that is not present in all_cache (eg. the user deleted an entry from the password-store)
for line in $(grep -vxf "$all_cache" "$recent_cache"); do
    sed -i "\|$line|d" "$recent_cache"
done

# merging $recent and $all, find the first occurrence of every entry 
# and remove any other occurrences
list=$(awk '!visited[$0]++' "$recent_cache" "$all_cache")

# pipe the list into dmenu to show the password picker
entry=$(printf "%s\n" "$list" | dmenu $dmenu_flags -p "$prompt" "$@") || exit

# update the cache with the picked entry
update_cache "$entry"

# copy the selected entrys password to the clipboard
keepassxc-cli clip "$db_path" -k "$key_path" --no-password "$entry"
